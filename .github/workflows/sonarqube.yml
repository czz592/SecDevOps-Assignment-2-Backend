name: SonarQube Analysis

on:
  push:
    branches: [main, dev, production] # Add your main branch here
  pull_request:
    branches: [production, dev, test]
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    name: SonarQube Scan
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      # Create backend test structure
      - name: Setup backend test structure
        run: |
          mkdir -p backend-flask/tests
          touch backend-flask/tests/__init__.py
          mv backend-flask/test_app.py backend-flask/tests/

      # Create sonar properties
      - name: Create sonar properties
        run: |
          cat > sonar-project.properties << 'EOL'
          sonar.projectName=LMS System
          sonar.sources=backend-flask
          sonar.tests=backend-flask/tests
          sonar.exclusions=**/node_modules/**,**/*.test.js,**/*.test.tsx,**/tests/**,**/coverage/**
          sonar.test.inclusions=**/*.test.js,**/*.test.tsx,**/test_*.py
          sonar.python.coverage.reportPaths=backend-flask/coverage.xml
          sonar.sourceEncoding=UTF-8
          sonar.python.version=3.10
          EOL


      # Backend setup and tests
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install backend dependencies
        working-directory: backend-flask
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run backend tests with coverage
        working-directory: backend-flask
        run: |
          python -m pytest tests/ --cov=. --cov-report=xml --cov-report=term-missing

      # SonarCloud scan
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
